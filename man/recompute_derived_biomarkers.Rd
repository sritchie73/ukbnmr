% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_biomarkers_user.R
\name{recompute_derived_biomarkers}
\alias{recompute_derived_biomarkers}
\title{Recompute composite biomarkers and ratios from the 107 non-derived biomarkers}
\usage{
recompute_derived_biomarkers(x)
}
\arguments{
\item{x}{\code{data.frame} containing NMR metabolomics data from UK Biobank.
May either be raw field data output by
\href{https://biobank.ctsu.ox.ac.uk/crystal/exinfo.cgi?src=accessing_data_guide}{ukbconv}
or data with column names corresponding to biomarkers listed in \code{\link{nmr_info}}.}
}
\value{
a \code{data.frame} with all composite biomarkers and ratios
  (re)computed from the 107 non-derived biomarkers (see \code{\link{nmr_info}}
  for details).
}
\description{
When adjusting biomarkers for unwanted biological covariates, it is desirable
to recompute composite biomarkers and ratios to ensure consistency in the
adjusted dataset. This function will compute all composite biomarkers and
ratios from their parts (see \code{\link{nmr_info}} for biomarker details).
}
\details{
If your UK Biobank project only has access to a subset of biomarkers, then
this function will only return the subset of ratios that can be computed from
the biomarker data provided.

All biomarkers in the input data are also returned alongside those computed
by this function.
}
\examples{
\dontrun{
# Example of a typical workflow for adjusting NMR metabolomics biomarkers for
# biological covariates

# First, if we haven't corrected for unwanted technical variation we do so
# using the appropriate function (see help("remove_technical_variation")).
ukb_data <- fread("path/to/decoded_ukbiobank_data.csv")
processed <- remove_technical_variation(ukb_data)
tech_qc <- processed$biomarkers
fwrite(tech_qc, file="path/to/nmr_biomarker_data.csv")
fwrite(processed$biomarker_qc_flags, file="path/to/nmr_biomarker_qc_flags.csv")
fwrite(processed$sample_processing, file="path/to/nmr_sample_qc_flags.csv")
fwrite(processed$log_offset, file="path/to/nmr_biomarker_log_offset.csv")
fwrite(processed$outlier_plate_detection, file="path/to/outlier_plate_info.csv")

# Otherwise assuming we load 'tech_qc' from "path/to/mr_biomarker_data.csv",
# We now run code to adjust biomarkers for biological covariates (code not
# supplied by this package)
bio_qc <- user_function_to_adjust_biomarkers_for_covariates(tech_qc)

# Now we recompute the composite biomarkers and derived ratios after
# adjustment for additional biological covariates
bio_qc <- recompute_derived_biomarkers(bio_qc)
fwrite(bio_qc, file="path/to/nmr_biomarkers_adjusted_for_covariates.csv")

# You may also want to aggregate and save the quality control flags for each
# sample from the biomarkers underlying each derived biomarker or ratio,
# adding them as additional columns to the input data (see
# help("recompute_derived_biomarker_qc_flags")).
biomarker_qc_flags <- recompute_derived_biomarker_qc_flags(nmr)
fwrite(biomarker_qc_flags, file="path/to/biomarker_qc_flags.csv")
}

}
\seealso{
\code{\link{nmr_info}} for list of computed biomarker ratios,
  \code{\link{recompute_derived_biomarker_qc_flags}()} for obtaining an
  aggregate of the biomarker QC flags from the biomarkers underlying each
  computed biomarker, and \code{\link{extract_biomarkers}()} for details on how
  raw data from
  \href{https://biobank.ctsu.ox.ac.uk/crystal/exinfo.cgi?src=accessing_data_guide}{ukbconv}
  is processed.
}
